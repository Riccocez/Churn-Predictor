
# coding: utf-8

# In[1]:

get_ipython().magic(u'matplotlib inline')
get_ipython().magic(u"config InlineBackend.figure_format='retina'")


# In[2]:

from sklearn.metrics import confusion_matrix
import matplotlib.pyplot as plt
from matplotlib import cm as cmap


# In[ ]:

class Visualization(object):
    
    def __init(self,cm = None):
        """
        * Generates Visualization object containing confusion matrices
        *
        * cm: a given confusion matrix
        * confusion_matrices: A list of confusion matrices
        """
        
        self.cm = cm
        self.confusion_matrices = []
    
    def build_confussion_matrix(self,y_test = None,predictions = None):
        """
        * Generates a confusion matrix according to the true and predicted values given
        *
        * y_test: The set of true labels
        * predictions: The set of predictions generated by a given model
        """
        
        self.confusion_matrices = []
        self.cm = confusion_matrix(y_test,predictions)
        self.confusion_matrices.append(self.cm)
        
        return
    
    def plot_matrix(self,matrix_labels = None):
        """
        * Generates a plot of a confusion matrix 
        * and labels each class according to matrix_labels
        *
        * matrix_labels: The set of labels to be shown in the plot
        """
        
        
        first = True
        cm = None

        for cm_iter in self.confusion_matrices:
            if first:
                cm = cm_iter.copy()
                first = False
            else:
                cm = cm + cm_iter

        fig, axes = plt.subplots()
        
        fig.suptitle('Confusion Matrix of Churn Predictions')
        colorbar = axes.matshow(cm, cmap=cmap.Blues)
        fig.colorbar(colorbar)

        axes.set_xlabel('Predicted class', fontsize=15)
        axes.set_ylabel('True class', fontsize=15)
        

        axes.set_xticklabels(matrix_labels)
        axes.set_yticklabels(matrix_labels)

        axes.tick_params(labelsize=10)
        
        return
    

        

